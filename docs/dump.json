[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/application.js",
    "memberof": null,
    "longname": "lib/application.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nconst path = require(\"path\");\nconst os = require(\"os\");\n\nconst Utils = require(\"./utils\");\nconst Logger = require(\"./logger\");\n\n\n/**\n * A boilerplate for Node.js applications.\n *\n * @class Application\n */\nclass Application{\n  /**\n   * Setup the application environment.\n   *\n   * @param {string} [root=null] The root directory of the application.\n   */\n  static setupGlobalEnvironment(root = null){\n    Application.mainFile = require.main.filename;\n    Application.root = root || path.resolve(path.basename(Application.mainFile), \"..\");\n    Application.environment = !Utils.isEmptyString(process.env.NODE_ENV) ? process.env.NODE_ENV : \"development\";\n    Application.production = Application.environment === \"production\";\n    Application.debug = (process.env.NODE_DEBUG || \"\").indexOf(\"apes\") !== -1;\n\n    Application.pid = process.pid;\n    Application.processName = !Utils.isEmptyString(process.env.PROCESS_NAME) ? process.env.PROCESS_NAME : path.basename(process.argv[1]);\n    Application.hostName = os.hostname();\n\n    Application.packageInfo = require(path.resolve(Application.root, \"package.json\")); // eslint-disable-line global-require\n    Application.label = process.env.PROCESS_NAME || Application.packageInfo.label || process.argv[1];\n    Application.version = Application.packageInfo.version || \"1.0.0\";\n  }\n\n  /**\n   * Creates a new application.\n   *\n   * @param {string} [configurationPath=\"config/application\"] The configuration file path.\n   */\n  constructor(configurationPath = \"config/application\"){\n    this.configurationPath = path.resolve(Application.root, configurationPath);\n    this.logger = new Logger(Application.processName, true);\n  }\n\n  /**\n   * Performs the main application loop.\n   *\n   * @returns {Promise<void | Error>} Nothing in case of success, the error otherwise.\n   */\n  async run(){\n    let error = null;\n    let cleaned = false;\n\n    try{\n      await this.logger.prepare();\n    }catch(e){\n      console.error(`Cannot create the logger: ${e}. Exiting ...`);\n      process.exit(1); // eslint-disable-line no-process-exit\n    }\n\n    try{\n      await this.start();\n      cleaned = true;\n    }catch(e){\n      error = e;\n      await this.logger.fatal(e);\n    }\n\n    await this.end(error, !cleaned);\n    return error ? Promise.reject(error) : Promise.resolve();\n  }\n\n  /**\n   * Loads and parses the configuration file.\n   *\n   * @returns {Promise<any | Error>} The configuration in case of success, the error otherwise.\n   */\n  loadConfiguration(){\n    try{\n      const configurations = require(this.configurationPath); // eslint-disable-line global-require\n\n      if(typeof configurations !== \"object\")\n        throw new TypeError(`File ${this.configurationPath} must contain a JSON object.`);\n\n      // Load configuration and port\n      this.configuration = configurations[Application.environment] || Object.values(configurations)[0] || {};\n\n      return Promise.resolve(this.configuration);\n    }catch(e){\n      return Promise.reject(e);\n    }\n  }\n\n  /**\n   * Prepares the application for execution. This **MUST** be overriden by subclasses.\n   *\n   * @returns {Promise<winston.Logger>} A Logger backend in case of success, the error otherwise.\n   */\n  prepare(){\n    return this.logger.warn(`${this.constructor.name}.prepare should override Application.prepare.`);\n  }\n\n  /**\n   * **THIS IS WHERE APPLICATION LOGIC MUST BE PUT.**\n   *\n   * Executes the application. This **MUST** be overriden by subclasses.\n   *\n   * @returns {Promise<winston.Logger>} A Logger backend in case of success, the error otherwise.\n   */\n  execute(){\n    return this.logger.warn(`${this.constructor.name}.execute should override Application.execute.`);\n  }\n\n  /**\n   * Cleans up the application after the execution. This **MUST** be overriden by subclasses.\n   *\n   * @returns {Promise<winston.Logger>} A Logger backend in case of success, the error otherwise.\n   */\n  cleanup(){\n    return this.logger.warn(`${this.constructor.name}.cleanup should override Application.cleanup.`);\n  }\n\n  /**\n   * Starts the application.\n   *\n   * @private\n   */\n  async start(){\n    // Prepare the application\n    await this.loadConfiguration();\n    await this.prepare();\n\n    // Execute\n    await this.logger.info(`Process ${Application.processName} started as PID ${Application.pid} ...`);\n    await this.execute();\n\n    // Cleanup\n    await this.logger.info(\"All operations completed. Exiting ...\");\n    await this.cleanup();\n  }\n\n  /**\n   * Ends the application.\n   *\n   * @private\n   * @param {Error} error The occurred error, if any.\n   * @param {boolean} mustClean If the application must be cleaned up.\n   */\n  async end(error, mustClean){\n    try{\n      if(mustClean)\n        await this.cleanup();\n    }catch(e){\n      // No-op since we're shutting down\n    }\n\n    await (error ? this.logger.warn(\"Process exited with errors.\") : this.logger.info(\"Process exited without errors.\")); // eslint-disable-line no-extra-parens\n    process.exit(error ? 1 : 0); // eslint-disable-line no-process-exit\n  }\n}\n\nApplication.setupGlobalEnvironment();\n\nmodule.exports = Application;\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/application.js",
    "longname": "lib/application.js~path",
    "access": null,
    "export": false,
    "importPath": "apes/lib/application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "os",
    "memberof": "lib/application.js",
    "longname": "lib/application.js~os",
    "access": null,
    "export": false,
    "importPath": "apes/lib/application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Utils",
    "memberof": "lib/application.js",
    "longname": "lib/application.js~Utils",
    "access": null,
    "export": false,
    "importPath": "apes/lib/application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Logger",
    "memberof": "lib/application.js",
    "longname": "lib/application.js~Logger",
    "access": null,
    "export": false,
    "importPath": "apes/lib/application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Application",
    "memberof": "lib/application.js",
    "longname": "lib/application.js~Application",
    "access": null,
    "export": false,
    "importPath": "apes/lib/application.js",
    "importStyle": null,
    "description": "A boilerplate for Node.js applications.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Application"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "setupGlobalEnvironment",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application.setupGlobalEnvironment",
    "access": null,
    "description": "Setup the application environment.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "root",
        "description": "The root directory of the application."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#constructor",
    "access": null,
    "description": "Creates a new application.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"config/application\"",
        "defaultRaw": "config/application",
        "name": "configurationPath",
        "description": "The configuration file path."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "configurationPath",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#configurationPath",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "logger",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#logger",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#run",
    "access": null,
    "description": "Performs the main application loop.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void | Error>} Nothing in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void ",
        " Error>"
      ],
      "spread": false,
      "description": "Nothing in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadConfiguration",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#loadConfiguration",
    "access": null,
    "description": "Loads and parses the configuration file.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<any | Error>} The configuration in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any ",
        " Error>"
      ],
      "spread": false,
      "description": "The configuration in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "configuration",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#configuration",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prepare",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#prepare",
    "access": null,
    "description": "Prepares the application for execution. This **MUST** be overriden by subclasses.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>} A Logger backend in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>"
      ],
      "spread": false,
      "description": "A Logger backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "execute",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#execute",
    "access": null,
    "description": "**THIS IS WHERE APPLICATION LOGIC MUST BE PUT.**\n\nExecutes the application. This **MUST** be overriden by subclasses.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>} A Logger backend in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>"
      ],
      "spread": false,
      "description": "A Logger backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cleanup",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#cleanup",
    "access": null,
    "description": "Cleans up the application after the execution. This **MUST** be overriden by subclasses.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>} A Logger backend in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>"
      ],
      "spread": false,
      "description": "A Logger backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#start",
    "access": "private",
    "description": "Starts the application.",
    "lineNumber": 133,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "end",
    "memberof": "lib/application.js~Application",
    "longname": "lib/application.js~Application#end",
    "access": "private",
    "description": "Ends the application.",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "The occurred error, if any."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "mustClean",
        "description": "If the application must be cleaned up."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/constants.js",
    "memberof": null,
    "longname": "lib/constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nmodule.exports = {\n  Utils: {\n    OUTPUT_PRECISION: 6,\n    S_TO_MS: 1E3,\n    US_TO_MS: 1E6,\n    TRUE_BOOLEAN_MATCHER: /^(\\s*(1|true|yes|t|y|on)\\s*)$/i\n  },\n\n  Serialization: {\n    NUMBER_SERIALIZATION_PRECISION: 6\n  },\n\n  HTTP: {\n    DEFAULT_CORS_MAX_AGE: 31536000, // One year\n    VALID_JSON_BODY: /^application\\/(.+\\+)?json/,\n\n    Statuses: {\n      OK: 200,\n      CREATED: 201,\n      ACCEPTED: 202,\n      NO_CONTENT: 204,\n      RESET: 205,\n      PARTIAL_CONTENT: 206,\n      MULTIPLE: 300,\n      MOVED: 301,\n      FOUND: 302,\n      NOT_MODIFIED: 304,\n      TEMPORARY_REDIRECT: 307,\n      PERMANENT_REDIRECT: 308,\n      BAD_REQUEST: 400,\n      UNAUTHORIZED: 401,\n      FORBIDDEN: 403,\n      NOT_FOUND: 404,\n      NOT_ALLOWED: 405,\n      NOT_ACCEPTABLE: 406,\n      CLIENT_TIMEOUT: 408,\n      CONFLICT: 409,\n      GONE: 410,\n      UNSUPPORTED_MEDIA_TYPE: 415,\n      UNPROCESSABLE_ENTITY: 422,\n      RATE_LIMIT: 429,\n      CLIENT_RESET: 499,\n      ERROR: 500,\n      NOT_IMPLEMENTED: 501,\n      GATEWAY_ERROR: 502,\n      GATEWAY_TIMEOUT: 504,\n      NETWORK_ERROR: 599\n    },\n\n    StatusClasses: {\n      SEPARATOR: 100,\n      INFO: 1,\n      SUCCESS: 2,\n      REDIRECT: 3,\n      CLIENT_ERROR: 4,\n      SERVER_ERROR: 5\n    }\n  }\n};\n"
  },
  {
    "__docId__": 19,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/http-server.js",
    "memberof": null,
    "longname": "lib/http-server.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nconst fs = require(\"fs-extra\");\nconst path = require(\"path\");\nconst http = require(\"http\");\nconst spdy = require(\"spdy\");\nconst express = require(\"express\");\nconst compression = require(\"compression\");\nconst bodyParser = require(\"body-parser\");\nconst onHeaders = require(\"on-headers\");\nconst sprintf = require(\"sprintf-js\").sprintf;\n\nconst Constants = require(\"./constants\");\nconst Utils = require(\"./utils\");\nconst Logger = require(\"./logger\");\nconst Application = require(\"./application\");\n\n\n/**\n * A HTTP server template class.\n *\n * @class HTTPServer\n * @extends {Application}\n */\nclass HTTPServer extends Application{\n  /**\n   * Profiles server and timing informations to the current request.\n   *\n   * @static\n   * @param {express.Request} req The current request.\n   * @param {express.Response} res The current response.\n   * @param {express.NextFunction} next The next middleware.\n   */\n  static profiler(req, res, next){\n    const startTime = process.hrtime();\n    req.startTime = startTime;\n\n    // When sending headers, add the hostname and the response time.\n    onHeaders(res, () => {\n      const time = process.hrtime(startTime);\n\n      res.append(\"X-Served-By\", Application.hostName);\n      res.append(\"X-Response-Time\", sprintf(\"%0.3fms\", time[0] * Constants.Utils.S_TO_MS + time[1] / Constants.Utils.US_TO_MS));\n    });\n\n    next();\n  }\n\n  /**\n   * Creates a new HTTP server.\n   *\n   * @param {string} [configurationPath=\"config/application\"] The configuration file path.\n   */\n  constructor(configurationPath = \"config/application\"){\n    super(configurationPath);\n    this.requestsLogger = new Logger(`${Application.processName}-requests`, !Application.production);\n  }\n\n  /**\n   * Prepares the HTTP server for execution.\n   *\n   * @returns {Promise<winston.Logger|Logger|Error|void>} The current logger in case of success, the error otherwise.\n   */\n  async prepare(){\n    const validJsonBody = Constants.HTTP.VALID_JSON_BODY;\n    this.express = express();\n    this.port = parseInt(process.env.PORT || this.configuration.httpServer.port, 0);\n\n    // Add base middlewares and configure Express\n    this.express.use(this.constructor.profiler);\n\n    // Add GZIP compression and parse JSON body\n    if(Application.production)\n      this.express.use(compression({threshold: 0}));\n\n    this.express.use(bodyParser.json({limit: this.configuration.httpServer.maxBodySize, type: req => validJsonBody.test(req.header(\"Content-Type\"))}));\n\n    // Only accept JSON bodies\n    this.express.use(bodyParser.text({limit: this.configuration.httpServer.maxBodySize, type: req => !(validJsonBody.test(req.header(\"Content-Type\")))})); // eslint-disable-line no-extra-parens\n    this.express.use((req, res, next) => {\n      if(typeof req.body === \"string\" && req.body.length)\n        throw new SyntaxError(`Content-Type header must be match regular expression /${validJsonBody.source}/ and the data must a valid encoded JSON.`);\n\n      next();\n    });\n\n    // Configure express behavior\n    this.express.set(\"json spaces\", Application.production ? 0 : 2);\n    this.express.enable(\"trust proxy\");\n\n    // Diagnostic ping\n    this.express.get(\"/ping\", (req, res) => {\n      res.status(Constants.HTTP.Statuses.OK).set({\"Content-Type\": \"text/plain\", \"X-Up-Time\": `${process.uptime() * Constants.Utils.S_TO_MS}ms`}).end(\"pong\");\n    });\n\n    // Add middlewares\n    await this.addMiddlewares();\n\n    // Add routes\n    await this.addRoutes();\n\n    // Add error handling\n    await this.addErrorHandling();\n\n    // Setup logging\n    return this.requestsLogger.prepare();\n  }\n\n  /**\n   * Executes the HTTP server.\n   *\n   * @returns {void|Error} Nothing in case of success, the error otherwise.\n   */\n  execute(){\n    return new Promise((resolve, reject) => {\n      const sockets = new Set();\n\n      // Create a HTTP(s) server - In non development we always start in HTTP since HTTPS is handled by Nginx\n      const useSSL = (process.env.SSL || this.configuration.httpServer.ssl.enabled) && !Application.production;\n      this.server = useSSL ? spdy.createServer(this.sslConfig(), this.express) : http.createServer(this.express);\n\n      // Listen to the port\n      this.server.listen(this.configuration.httpServer.port, () => {\n        this.logger.info(`Listening using HTTP${useSSL ? \"2\" : \"\"} on port ${this.configuration.httpServer.port}.`);\n      });\n\n      // Error handling\n      this.server.on(\"error\", reject);\n\n      // Socket tracking to allow to force a shutdown - Otherwise server.close will wait for connection to end.\n      this.server.on(\"connection\", socket => {\n        sockets.add(socket);\n        socket.on(\"close\", () => sockets.delete(socket));\n      });\n\n      // Handle termination signals\n      for(let signal of [\"SIGTERM\", \"SIGINT\", \"SIGUSR2\"]){ // eslint-disable-line prefer-const\n        process.removeAllListeners(signal);\n        process.on(signal, () => {\n          // Terminate all pending sockets\n          for(let socket of sockets) // eslint-disable-line prefer-const\n            socket.destroy();\n\n          // Terminate the server and exit\n          this.server.close(error => { // eslint-disable-line arrow-body-style\n            return error ? reject(error) : resolve();\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Adds middleware to the Express server. This is reserved for subclasses to override. Default implementation does nothing.\n   */\n  addMiddlewares(){ // eslint-disable-line class-methods-use-this\n    // Default implementation is a no-op since it's optional\n  }\n\n  /**\n   * Adds routes to the Express server. This is reserved for subclasses to override. Default implementation does nothing.\n   *\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n  addRoutes(){\n    return this.logger.warn(`${this.constructor.name}.addRoutes should override HTTP.Server.addRoutes.`);\n  }\n\n  /**\n   * Adds error handling to the Express server.\n   */\n  addErrorHandling(){\n    // Default catch all and error handler\n    this.express.use((req, res) => {\n      this.sendGeneralError(req, res, Constants.HTTP.Statuses.NOT_FOUND, \"Not Found.\");\n    });\n\n    // Error handler for unhandled exceptions\n    this.express.use(this.errorHandler.bind(this));\n  }\n\n  /**\n   * Adds CORS handling to the Express server.\n   *\n   * @param {string} origin A value for the `Access-Control-Allow-Origin` header. If not provided, will be inferred by requests' `Origin` header.\n   * @param {string} headers A value for `Access-Control-Allow-Headers` header. If not provided, `Content-Type` will be used.\n   * @param {string} methods A value for `Access-Control-Allow-Methods` header. If not provided, only **GET** and **POST** methods will be allowed.\n   * @param {string} maxAge A value for `Access-Control-Max-Age` header. If not provided, one **year** will be used.\n   */\n  addCORSHandling(origin, headers, methods, maxAge){\n    this.express.use((req, res, next) => {\n      const allowedOrigin = origin || req.header(\"Origin\") || req.header(\"origin\");\n\n      if(allowedOrigin){\n        res.set({\n          \"Access-Control-Allow-Origin\": allowedOrigin,\n          \"Access-Control-Allow-Headers\": headers || \"Content-Type\",\n          \"Access-Control-Allow-Methods\": methods || \"GET, POST\",\n          \"Access-Control-Max-Age\": (maxAge || Constants.HTTP.DEFAULT_CORS_MAX_AGE).toString()\n        });\n      }\n\n      next();\n    });\n\n    this.express.options(\"/:unused*?\", (req, res) => {\n      res.status(Constants.HTTP.Statuses.NO_CONTENT).end();\n    });\n  }\n\n  /**\n   * Configures Express static file serving.\n   *\n   * @param {string} dir The folder to use as root for static files.\n   * @param {string} root The base folder to get a absolute path for `dir`.\n   * @returns {string} The absolute static files folder.\n   */\n  setupStaticFolder(dir, root = null){\n    const final = path.resolve(root || Application.root, dir);\n    this.express.use(express.static(final));\n    return final;\n  }\n\n  /**\n   * Loads and parses the configuration file.\n   */\n  async loadConfiguration(){\n    await super.loadConfiguration();\n    this.sanitizeConfiguration();\n  }\n\n  /**\n   * Sanitizes the configuration.\n   *\n   * @returns {object} The server configuration.\n   */\n  sanitizeConfiguration(){\n    if(!this.configuration.httpServer)\n      this.configuration.httpServer = {};\n\n    if(!this.configuration.httpServer.port)\n      this.configuration.httpServer.port = this.constructor.defaultPort;\n\n    if(!this.configuration.httpServer.ssl)\n      this.configuration.httpServer.ssl = {enabled: false};\n\n    return this.configuration;\n  }\n\n  /**\n   * Load SSL certificate and key for HTTPS servers.\n   *\n   * @returns {{key: Buffer, cert: Buffer}} The loaded certificates.\n   */\n  sslConfig(){\n    return {\n      key: fs.readFileSync(path.resolve(Application.root, this.configuration.httpServer.ssl.key || \"config/ssl/private-key.pem\")), // eslint-disable-line no-sync\n      cert: fs.readFileSync(path.resolve(Application.root, this.configuration.httpServer.ssl.certificate || \"config/ssl/certificate.pem\")) // eslint-disable-line no-sync\n    };\n  }\n\n  /**\n   * Replies with a HTTP redirect response to the client.\n   *\n   * @param {express.Request} req The current Express request.\n   * @param {express.Response} res The current Express response.\n   * @param {number} code The HTTP redirect code to use. Defaults to `302`.\n   * @param {string} destination The URL where redirect to.\n   * @param {number[]} startTime The starting time of the request, as returned by `process.hrtime()`.\n   */\n  redirectTo(req, res, code, destination, startTime){\n    if(!startTime)\n      startTime = req.startTime || process.hrtime();\n\n    if(!code)\n      code = Constants.HTTP.Statuses.FOUND;\n\n    this.logRequest(code, req, startTime);\n    res.redirect(code, destination);\n  }\n\n  /**\n   * Sends a response back to the client.\n   *\n   * @param {express.Request} req The current Express request.\n   * @param {express.Response} res The current Express response.\n   * @param {number} code The HTTP response code to use. Defaults to `200`.\n   * @param {any} content The data to send back. Strings will set type to be `text/plain`, otherwise `application/json` will be used.\n   * @param {number[]} startTime The starting time of the request, as returned by `process.hrtime()`.\n   * @returns {void}\n   */\n  sendResponse(req, res, code, content, startTime = null){\n    if(!startTime)\n      startTime = req.startTime || process.hrtime();\n\n    if(!code)\n      code = Constants.HTTP.Statuses.OK;\n\n    this.logRequest(code, req, startTime);\n    res.status(code);\n\n    if(typeof content === \"string\")\n      res.type(\"text\");\n\n    return content !== null && typeof content !== \"undefined\" ? res.send(content) : res.end();\n  }\n\n  /**\n   * Sends a error response back to the client.\n   *\n   * @param {express.Request} req The current Express request.\n   * @param {express.Response} res The current Express response.\n   * @param {number} code The HTTP response code to use. Defaults to `200`.\n   * @param {string} message The error message to send back.\n   * @param {boolean} single If `true`, error will be wrapped in a `error` key, otherwise it will be wrapped in `errors` key.\n   * @returns {void}\n   */\n  sendGeneralError(req, res, code, message, single = false){\n    const body = typeof message === \"object\" ? Object.assign(message, {code}) : {code, message};\n    return this.sendResponse(req, res, code, single ? {error: body} : {errors: [body]});\n  }\n\n  /**\n   * The Express catch all error handler.\n   *\n   * @param {Error | string} error The occurred error.\n   * @param {express.Request} req The current Express request.\n   * @param {express.Response} res The current Express response.\n   * @param {express.NextFunction} next The next middleware. This is to comply with Express API, but the middleware is never called.\n   * @returns {void}\n   */\n  errorHandler(error, req, res, next){ // eslint-disable-line no-unused-vars\n    const errorStatusCode = Constants.HTTP.Statuses.ERROR;\n\n    if(res.headersSent)\n      return false;\n\n    if(error instanceof SyntaxError && req.method === \"POST\"){ // This is a malformed JSON POST body\n      return res.status(Constants.HTTP.Statuses.BAD_REQUEST).json({\n        errors: [{\n          code: Constants.HTTP.Statuses.BAD_REQUEST,\n          message: \"Invalid JSON POST data received.\",\n          error: error.message\n        }]\n      });\n    }\n\n    // Log the error\n    this.logger.error(error);\n\n    // On production show a generic message\n    if(Application.production)\n      return this.sendGeneralError(req, res, errorStatusCode, \"Internal Application Error.\");\n\n    // If it's a string, don't try to get type and stack\n    if(typeof error === \"string\")\n      return this.sendGeneralError(req, res, errorStatusCode, error);\n\n    // Format stack\n    const stack = error.stack ? error.stack.split(\"\\n\") : [];\n    stack.shift();\n\n    return this.sendResponse(req, res, errorStatusCode, {type: error.name, message: error.message, stack: stack.map(s => s.trim().replace(/^at\\s/, \"\"))});\n  }\n\n  /**\n   * Logs a request using the requestsLogger.\n   *\n   * @param {number} code The HTTP code sent to the client.\n   * @param {express.Request} req The current Express request.\n   * @param {number[]} startTime The starting time of the request, as returned by `process.hrtime()`.\n   * @returns {winston.Logger} The requestsLogger backend.\n   */\n  logRequest(code, req, startTime){\n    let method = null;\n\n    switch(Math.floor(code / Constants.HTTP.StatusClasses.SEPARATOR)){\n      case Constants.HTTP.StatusClasses.CLIENT_ERROR:\n        method = \"warn\";\n        break;\n      case Constants.HTTP.StatusClasses.SERVER_ERROR:\n        method = \"error\";\n        break;\n      case Constants.HTTP.StatusClasses.REDIRECT:\n        method = \"debug\";\n        break;\n      default:\n        method = \"info\";\n        break;\n    }\n\n    return this.requestsLogger[method](Object.assign(\n      {\n        status: code,\n        elapsed: Utils.elapsedTime(startTime),\n        ip: req.ip.replace(/^::ffff:/, \"\"),\n        method: req.method,\n        url: req.url\n      },\n      req.method === \"POST\" && !Application.production ? {body: req.body} : {},\n      req.extraLogAttributes || {}\n    ));\n  }\n}\n\nHTTPServer.defaultPort = 21080;\n\n/**\n  @module {HTTP}\n */\nmodule.exports = HTTPServer;\n"
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~fs",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~path",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "http",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~http",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "spdy",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~spdy",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "express",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~express",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "compression",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~compression",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bodyParser",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~bodyParser",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "onHeaders",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~onHeaders",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sprintf",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~sprintf",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Constants",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~Constants",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Utils",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~Utils",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Logger",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~Logger",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Application",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~Application",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HTTPServer",
    "memberof": "lib/http-server.js",
    "longname": "lib/http-server.js~HTTPServer",
    "access": null,
    "export": false,
    "importPath": "apes/lib/http-server.js",
    "importStyle": null,
    "description": "A HTTP server template class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "HTTPServer"
      }
    ],
    "interface": false,
    "extends": [
      "Application"
    ]
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "profiler",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer.profiler",
    "access": null,
    "description": "Profiles server and timing informations to the current request.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current request."
      },
      {
        "nullable": null,
        "types": [
          "express.Response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The current response."
      },
      {
        "nullable": null,
        "types": [
          "express.NextFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "The next middleware."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#constructor",
    "access": null,
    "description": "Creates a new HTTP server.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"config/application\"",
        "defaultRaw": "config/application",
        "name": "configurationPath",
        "description": "The configuration file path."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "requestsLogger",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#requestsLogger",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prepare",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#prepare",
    "access": null,
    "description": "Prepares the HTTP server for execution.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger|Logger|Error|void>} The current logger in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger",
        "Logger",
        "Error",
        "void>"
      ],
      "spread": false,
      "description": "The current logger in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "express",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#express",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "port",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#port",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "execute",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#execute",
    "access": null,
    "description": "Executes the HTTP server.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void|Error} Nothing in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void",
        "Error"
      ],
      "spread": false,
      "description": "Nothing in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "server",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#server",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addMiddlewares",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#addMiddlewares",
    "access": null,
    "description": "Adds middleware to the Express server. This is reserved for subclasses to override. Default implementation does nothing.",
    "lineNumber": 159,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addRoutes",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#addRoutes",
    "access": null,
    "description": "Adds routes to the Express server. This is reserved for subclasses to override. Default implementation does nothing.",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addErrorHandling",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#addErrorHandling",
    "access": null,
    "description": "Adds error handling to the Express server.",
    "lineNumber": 175,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addCORSHandling",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#addCORSHandling",
    "access": null,
    "description": "Adds CORS handling to the Express server.",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "A value for the `Access-Control-Allow-Origin` header. If not provided, will be inferred by requests' `Origin` header."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": "A value for `Access-Control-Allow-Headers` header. If not provided, `Content-Type` will be used."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methods",
        "description": "A value for `Access-Control-Allow-Methods` header. If not provided, only **GET** and **POST** methods will be allowed."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "maxAge",
        "description": "A value for `Access-Control-Max-Age` header. If not provided, one **year** will be used."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setupStaticFolder",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#setupStaticFolder",
    "access": null,
    "description": "Configures Express static file serving.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The absolute static files folder."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "The folder to use as root for static files."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "The base folder to get a absolute path for `dir`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The absolute static files folder."
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadConfiguration",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#loadConfiguration",
    "access": null,
    "description": "Loads and parses the configuration file.",
    "lineNumber": 230,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sanitizeConfiguration",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#sanitizeConfiguration",
    "access": null,
    "description": "Sanitizes the configuration.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} The server configuration."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "The server configuration."
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sslConfig",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#sslConfig",
    "access": null,
    "description": "Load SSL certificate and key for HTTPS servers.",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{key: Buffer, cert: Buffer}} The loaded certificates."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{key: Buffer, cert: Buffer}"
      ],
      "spread": false,
      "description": "The loaded certificates."
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "redirectTo",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#redirectTo",
    "access": null,
    "description": "Replies with a HTTP redirect response to the client.",
    "lineNumber": 274,
    "params": [
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current Express request."
      },
      {
        "nullable": null,
        "types": [
          "express.Response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The current Express response."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "The HTTP redirect code to use. Defaults to `302`."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "The URL where redirect to."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "startTime",
        "description": "The starting time of the request, as returned by `process.hrtime()`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sendResponse",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#sendResponse",
    "access": null,
    "description": "Sends a response back to the client.",
    "lineNumber": 295,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current Express request."
      },
      {
        "nullable": null,
        "types": [
          "express.Response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The current Express response."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "The HTTP response code to use. Defaults to `200`."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "The data to send back. Strings will set type to be `text/plain`, otherwise `application/json` will be used."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "startTime",
        "description": "The starting time of the request, as returned by `process.hrtime()`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sendGeneralError",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#sendGeneralError",
    "access": null,
    "description": "Sends a error response back to the client.",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current Express request."
      },
      {
        "nullable": null,
        "types": [
          "express.Response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The current Express response."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "The HTTP response code to use. Defaults to `200`."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The error message to send back."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "single",
        "description": "If `true`, error will be wrapped in a `error` key, otherwise it will be wrapped in `errors` key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "errorHandler",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#errorHandler",
    "access": null,
    "description": "The Express catch all error handler.",
    "lineNumber": 335,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Error ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "The occurred error."
      },
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current Express request."
      },
      {
        "nullable": null,
        "types": [
          "express.Response"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The current Express response."
      },
      {
        "nullable": null,
        "types": [
          "express.NextFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "The next middleware. This is to comply with Express API, but the middleware is never called."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logRequest",
    "memberof": "lib/http-server.js~HTTPServer",
    "longname": "lib/http-server.js~HTTPServer#logRequest",
    "access": null,
    "description": "Logs a request using the requestsLogger.",
    "lineNumber": 377,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{winston.Logger} The requestsLogger backend."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "The HTTP code sent to the client."
      },
      {
        "nullable": null,
        "types": [
          "express.Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The current Express request."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "startTime",
        "description": "The starting time of the request, as returned by `process.hrtime()`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "winston.Logger"
      ],
      "spread": false,
      "description": "The requestsLogger backend."
    },
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/logger.js",
    "memberof": null,
    "longname": "lib/logger.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nconst path = require(\"path\");\nconst winston = require(\"winston\");\nconst fs = require(\"fs-extra\");\nconst Bluebird = require(\"bluebird\");\n\nlet Application = null;\nconst mkdirsAsync = Bluebird.promisify(fs.mkdirs);\n\n/**\n * A class to perform rich logging, based on [Winston](http://npmjs.com/package/winston).\n *\n * @class Logger\n */\nclass Logger{\n  /**\n   * Creates a new logger.\n   *\n   * @param {string} target The target log file. It will be stored in the `log` folder with the current environment appended.\n   * @param {boolean} [useConsole=false] Whether or not also log on console.\n   * @param {any} [root=null] The root folder for the log file. Usually it's the `log` in the current working directory.\n   *\n   * @memberOf Logger\n   */\n  constructor(target, useConsole = false, root = null){\n    // This is to resolve a cyclic dependency\n    if(!Application)\n      Application = require(\"./application\"); // eslint-disable-line global-require\n\n    this.root = path.resolve(root || Application.root, \"log\");\n    this.target = target;\n    this.useConsole = useConsole;\n  }\n\n  /**\n   * Prepares the logger for use.\n   *\n   * @returns {Promise<winston.Logger>|Error} The current logger in case of success, the error otherwise.\n   */\n  async prepare(){\n    if(this.backend)\n      return Promise.resolve(this);\n\n    await mkdirsAsync(this.root);\n\n    const target = path.resolve(this.root, `${this.target}.log`);\n\n    // Create transports\n    const level = Application.debug ? \"debug\" : \"verbose\";\n    const transports = [\n      new winston.transports.File({name: \"file\", filename: target, level, stderrLevels: [\"error\"], colorize: true, timestamp: true})\n    ];\n\n    if(this.useConsole)\n      transports.unshift(new winston.transports.Console({name: \"console\", level, stderrLevels: [\"error\"], colorize: true, timestamp: true}));\n\n    // Create the logger\n    this.backend = new winston.Logger({transports});\n    Bluebird.promisifyAll(this.backend);\n    return this;\n  }\n\n  /**\n   * Logs a message with info priority level `info`.\n   *\n   * @param {any[]} args The message to log.\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n  info(...args){\n    return this.backend.infoAsync(...args);\n  }\n\n  /**\n   * Logs a message with info priority level `warn`.\n   *\n   * @param {any[]} args The message to log.\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n\n  warn(...args){\n    return this.backend.warnAsync(...args);\n  }\n\n  /**\n   * Logs a message with info priority level `error`.\n   *\n   * @param {any[]} args The message to log.\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n\n  error(...args){\n    return this.backend.errorAsync(...args);\n  }\n\n  /**\n   * Logs a message with info priority level `fatal` and then quits the process.\n   *\n   * @param {any[]} args The message to log.\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n\n  fatal(...args){\n    return this.backend.errorAsync(...args).then(() => process.exit(1)); // eslint-disable-line no-process-exit\n  }\n\n  /**\n   * Logs a message with info priority level `debug`.\n   *\n   * @param {any[]} args The message to log.\n   * @returns {Promise<winston.Logger>|Error} The backend in case of success, the error otherwise.\n   */\n  debug(...args){\n    if(!Application.debug)\n      return Promise.resolve(this.backend);\n\n    return this.backend.debugAsync(...args);\n  }\n}\n\nmodule.exports = Logger;\n"
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~path",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "winston",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~winston",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~fs",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Bluebird",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~Bluebird",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Application",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~Application",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "mkdirsAsync",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~mkdirsAsync",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Logger",
    "memberof": "lib/logger.js",
    "longname": "lib/logger.js~Logger",
    "access": null,
    "export": false,
    "importPath": "apes/lib/logger.js",
    "importStyle": null,
    "description": "A class to perform rich logging, based on [Winston](http://npmjs.com/package/winston).",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Logger"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 63,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#constructor",
    "access": null,
    "description": "Creates a new logger.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Logger"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The target log file. It will be stored in the `log` folder with the current environment appended."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "useConsole",
        "description": "Whether or not also log on console."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "root",
        "description": "The root folder for the log file. Usually it's the `log` in the current working directory."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#root",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "target",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#target",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "useConsole",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#useConsole",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prepare",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#prepare",
    "access": null,
    "description": "Prepares the logger for use.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The current logger in case of success, the error otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The current logger in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "backend",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#backend",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "info",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#info",
    "access": null,
    "description": "Logs a message with info priority level `info`.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The message to log."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "warn",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#warn",
    "access": null,
    "description": "Logs a message with info priority level `warn`.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The message to log."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "error",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#error",
    "access": null,
    "description": "Logs a message with info priority level `error`.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The message to log."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fatal",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#fatal",
    "access": null,
    "description": "Logs a message with info priority level `fatal` and then quits the process.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The message to log."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "debug",
    "memberof": "lib/logger.js~Logger",
    "longname": "lib/logger.js~Logger#debug",
    "access": null,
    "description": "Logs a message with info priority level `debug`.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<winston.Logger>|Error} The backend in case of success, the error otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The message to log."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<winston.Logger>",
        "Error"
      ],
      "spread": false,
      "description": "The backend in case of success, the error otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/main.js",
    "memberof": null,
    "longname": "lib/main.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nmodule.exports = {\n  Constants: require(\"./constants\"), // eslint-disable-line global-require\n  RuntimeError: require(\"./runtime-error\"), // eslint-disable-line global-require\n  Utils: require(\"./utils\"), // eslint-disable-line global-require\n  Logger: require(\"./logger\"), // eslint-disable-line global-require\n  Application: require(\"./application\"), // eslint-disable-line global-require\n  HTTPServer: require(\"./http-server\") // eslint-disable-line global-require\n};\n"
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/runtime-error.js",
    "memberof": null,
    "longname": "lib/runtime-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\n/**\n * Error raised within Apes classes.\n *\n * @extends {Error}\n */\nclass RuntimeError extends Error{\n  /**\n   * Creates a new error.\n   *\n   * @param {string} code The error code.\n   * @param {string|object} [message=null] The error message or a object containing the `message` property\n   * @param {any} [error=null] The wrapped error.\n   */\n  constructor(code, message = null, error = null){\n    code = code.toString().toUpperCase();\n\n    if(error instanceof RuntimeError){ // Copy operator\n      super(error.message);\n      this.wrappedError = error.wrappedError;\n    }else{\n      let data = [];\n      if(message && typeof message === \"object\"){\n        data = Object.assign({}, message);\n        Reflect.deleteProperty(data, \"message\");\n        message = message.message;\n      }\n\n      super(error ? (error.message || error) : (message || code)); // eslint-disable-line no-extra-parens\n      this.data = data;\n\n      if(error instanceof Error)\n        this.wrappedError = error;\n    }\n\n    this.code = code;\n  }\n}\n\nmodule.exports = RuntimeError;\n"
  },
  {
    "__docId__": 76,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RuntimeError",
    "memberof": "lib/runtime-error.js",
    "longname": "lib/runtime-error.js~RuntimeError",
    "access": null,
    "export": false,
    "importPath": "apes/lib/runtime-error.js",
    "importStyle": null,
    "description": "Error raised within Apes classes.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/runtime-error.js~RuntimeError",
    "longname": "lib/runtime-error.js~RuntimeError#constructor",
    "access": null,
    "description": "Creates a new error.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "The error code."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "message",
        "description": "The error message or a object containing the `message` property"
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "error",
        "description": "The wrapped error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wrappedError",
    "memberof": "lib/runtime-error.js~RuntimeError",
    "longname": "lib/runtime-error.js~RuntimeError#wrappedError",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "lib/runtime-error.js~RuntimeError",
    "longname": "lib/runtime-error.js~RuntimeError#data",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wrappedError",
    "memberof": "lib/runtime-error.js~RuntimeError",
    "longname": "lib/runtime-error.js~RuntimeError#wrappedError",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "code",
    "memberof": "lib/runtime-error.js~RuntimeError",
    "longname": "lib/runtime-error.js~RuntimeError#code",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utils.js",
    "memberof": null,
    "longname": "lib/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n * This file is part of the apes.js npm package. Copyright (C) 2016 and above Shogun <shogun@cowtech.it>.\n * Licensed under the MIT license, which can be found at http://www.opensource.org/licenses/mit-license.php.\n */\n\nconst moment = require(\"moment\");\nconst crypto = require(\"crypto\");\n\nconst Constants = require(\"./constants\");\n\n/**\n * A set of common utility methods.\n *\n * @class Utils\n */\nclass Utils{\n  /**\n   * Parses a date string in UTC timezone.\n   *\n   * @param {string} date The date to parse.\n   * @returns {moment} The parsed date.\n   * @member {Utils}\n   */\n  static utcDate(date){\n    if(!date)\n      date = moment().format(\"YYYY-MM-DD\");\n\n    return moment.utc(`${date} 00:00:00 +0000`, \"YYYY-MM-DD HH:mm:ss Z\");\n  }\n\n  /**\n   * Flattens an array.\n   *\n   * @param {array} array The array to flatten\n   * @param {number} [maxDepth=-1] The maximum level to flatten.\n   * @param {array} [result=[]] **For internal use.**\n   * @returns {array} The flattened array.\n   */\n  static flatten(array, maxDepth = -1, result = []){\n    if(!Array.isArray(array))\n      array = [array];\n\n    for(let item of array){ // eslint-disable-line prefer-const\n      if(Array.isArray(item) && maxDepth !== 0)\n        Utils.flatten(item, maxDepth - 1, result);\n      else\n        result.push(item);\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes duplicate entries inside an array.\n   *\n   * @param {array} array The array to unicize.\n   * @returns {array} The input array with all duplicate values removed.\n   */\n  static uniq(array){\n    if(!Array.isArray(array))\n      array = [array];\n\n    return [...new Set(array)];\n  }\n\n  /**\n   * Removes duplicate entries inside an array.\n   *\n   * @param {array} array The array to unicize.\n   * @returns {array} The input array with all duplicate values removed.\n   */\n  static unique(array){\n    return Utils.uniq(array);\n  }\n\n  /**\n   * Checks whether a string is empty.\n   *\n   * @param {string} target The string to verify.\n   * @returns {boolean} `true` if `target` is a non-string or if it is empty, `false` otherwise.\n   */\n  static isEmptyString(target){\n    return typeof target !== \"string\" || !target.trim().length;\n  }\n\n  /**\n   * Tokenizes a list of string using a separator.\n   *\n   * @param {string[]} list The list of strings to tokenize.\n   * @param {string|Regex} [pattern=/\\s*,\\s*\\/] The pattern to use as separator.\n   * @returns {array} The list of tokens.\n   */\n  static tokenize(list, pattern = /\\s*,\\s*/){\n    if(!Array.isArray(list))\n      list = [list];\n\n    const entries = Utils.flatten(list).filter(k => k).map(el => el.toString().split(pattern).map(k => k.trim())); // Flatten, remove empty values, split by comma and trim\n    return Utils.uniq(Utils.flatten(entries).filter(k => k)); // Flatten again, remove empty values, then duplicates\n  }\n\n  /**\n   * Encodes a string to Base 64 encoding.\n   *\n   * @param {string} data The data to encode.\n   * @returns {string} The enccoded data.\n   */\n  static encodeBase64(data){\n    return Buffer.from(data, \"utf8\").toString(\"base64\").toString(\"base64\");\n  }\n\n  /**\n   * Decodes a string from Base 64 encoding.\n   *\n   * @param {string} data The data to decode.\n   * @param {boolean} [asString=true] If `true`, a UTF-8 string will be returned, otherwise a Node.js Buffer.\n   * @returns {string|Buffer} The decoded data.\n   */\n  static decodeBase64(data, asString = true){\n    const decoded = Buffer.from(data, \"base64\");\n\n    return asString ? decoded.toString(\"utf8\") : decoded;\n  }\n\n  /**\n   * Computes the MD5 hash of a string.\n   *\n   * @param {string} data The string to compute the hash of.\n   * @returns {string} The MD5 hash of the input string.\n   */\n  static md5(data){\n    return crypto.createHash(\"md5\").update(data).digest(\"hex\");\n  }\n\n  /**\n   * Parses a object as a boolean.\n   *\n   * @param {any} value The value to parse.\n   * @returns {boolean} The boolean value.\n   */\n  static parseBoolean(value){\n    return value && value.toString().match(Constants.Utils.TRUE_BOOLEAN_MATCHER) !== null;\n  }\n\n  /**\n   * Parses a date.\n   *\n   * @param {string|number} raw The string or number to parse. Numbers are interpreted as `X days ago`, positive and negative values have the same meaning.\n   * @param {moment|number} [fallback=null] The fallback value to return when parsing fails.\n   * @returns {moment} The parsed date.\n   */\n  static parseDate(raw, fallback = null){\n    if(typeof raw === \"string\" || typeof raw === \"number\"){\n      raw = raw.toString();\n\n      let value = null;\n\n      if(raw.match(/^(-?)\\d+$/)) // Relative days ago. Future is obviously not supported. Positive and negative values have the same meaning\n        value = Utils.utcDate().subtract(Math.abs(parseInt(raw, 0)), \"d\");\n      else if(raw.match(/^\\d{4}-\\d{2}-\\d{2}$/)) // Absolute date in the format YYYY-MM-DD.\n        value = Utils.utcDate(raw);\n\n      if(value && value.isValid())\n        return value;\n    }\n\n    if(typeof fallback === \"number\")\n      return Utils.utcDate().subtract(Math.abs(fallback), \"d\");\n\n    return fallback;\n  }\n\n  /**\n   * Parses a timestamp.\n   *\n   * @param {string} raw The string to parse.\n   * @param {string} [formats=[\"YYYY-MM-DDTHH:mm:ssZ\", \"YYYY-MM-DDTHH:mm:ss.SSSZZ\"]] A list of format to use for parsing.\n   * @param {boolean} [utc=true] Whether to return the timestamp in UTC timezone.\n   * @param {any} [fallback=null] The fallback value to return when parsing fails.\n   * @returns {moment} The parsed timestamp.\n   */\n  static parseDateTime(raw, formats = [\"YYYY-MM-DDTHH:mm:ssZ\", \"YYYY-MM-DDTHH:mm:ss.SSSZZ\"], utc = true, fallback = null){\n    for(let format of formats){ // eslint-disable-line prefer-const\n      const value = moment(raw, format);\n\n      if(value.isValid())\n        return utc ? value.utc() : value;\n    }\n\n    if(typeof fallback === \"number\")\n      return Utils.utcDate().subtract(Math.abs(fallback), \"d\");\n\n    return fallback;\n  }\n\n  /**\n   * Serializes a timestamp as a string.\n   *\n   * @param {moment} date The timestamp to serialize.\n   * @param {string} [format=\"YYYY-MM-DDTHH:mm:ssZ\"] The format to use.\n   * @returns {string} The serialized timestamp.\n   */\n  static serializeDate(date, format = \"YYYY-MM-DDTHH:mm:ssZ\"){\n    return date.utc().format(format);\n  }\n\n  /**\n   * Returns the elapsed time (in milliseconds) since a reference time.\n   *\n   * @param {number[]} start The starting reference time, as returned by `process.hrtime()`.\n   * @param {boolean} [round=true] Whether or not round the results.\n   * @param {number} [precision=Constants.Utils.OUTPUT_PRECISION] The precision to run in case of rounding.\n   * @returns {number|string} If `round` is true, a string with the elapsed time, otherwise a full precision number.\n   */\n  static elapsedTime(start, round = true, precision = Constants.Utils.OUTPUT_PRECISION){\n    if(!start)\n      return null;\n\n    let elapsed = process.hrtime(start);\n    elapsed = elapsed[0] * Constants.Utils.S_TO_MS + elapsed[1] / Constants.Utils.US_TO_MS;\n\n    if(round)\n      elapsed = elapsed.toPrecision(precision);\n\n    return elapsed;\n  }\n\n  /**\n   * Returns a random value.\n   *\n   * @param {number} min The minimum acceptable value.\n   * @param {number} max The maximum acceptable value.\n   * @returns {number} A random number between `min` and `max` (inclusive).\n   */\n  static random(min, max){\n    return min + Math.random() * (max - min);\n  }\n\n  /**\n   * Returns a sequence of numbers.\n   *\n   * @param {any} start The starting number.\n   * @param {any} end The ending number.\n   * @param {boolean} [inclusive=false] Whether or not `end` is included in the returned array.\n   * @returns {number[]} A sequence of numbers starting with `start` and ending with `end`.\n   */\n  static range(start, end, inclusive = false){\n    // Parse as numbers\n    start = parseFloat(start, 0);\n    end = parseFloat(end, 0);\n\n    // Early returns in case of invalids and negatives\n    if(isNaN(start) || isNaN(end) || start < 0 || end < 0)\n      return [];\n    else if(start > end) // Swap badly ordered arguments\n      [end, start] = [start, end];\n\n    // Make integers\n    start = Math.floor(start);\n    end = Math.floor(end);\n\n    // Generate the range\n    const length = end - start + (inclusive ? 1 : 0);\n    return [...Array(length)].map((_, i) => start + i);\n  }\n\n  /**\n   * Creates a async function which resolves after the specified amount.\n   *\n   * @param {any} amount The amount of time to wait before returning, in milliseconds.\n   */\n  static async delay(amount){\n    await new Promise(resolve => setTimeout(resolve, amount));\n  }\n}\n\nmodule.exports = Utils;\n"
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "moment",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~moment",
    "access": null,
    "export": false,
    "importPath": "apes/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "crypto",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~crypto",
    "access": null,
    "export": false,
    "importPath": "apes/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Constants",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~Constants",
    "access": null,
    "export": false,
    "importPath": "apes/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Utils",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~Utils",
    "access": null,
    "export": false,
    "importPath": "apes/lib/utils.js",
    "importStyle": null,
    "description": "A set of common utility methods.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Utils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 87,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "utcDate",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.utcDate",
    "access": null,
    "description": "Parses a date string in UTC timezone.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} The parsed date."
      },
      {
        "tagName": "@member",
        "tagValue": "{Utils}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "date",
        "description": "The date to parse."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "The parsed date."
    },
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "flatten",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.flatten",
    "access": null,
    "description": "Flattens an array.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} The flattened array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "The array to flatten"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "maxDepth",
        "description": "The maximum level to flatten."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "result",
        "description": "**For internal use.**"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "The flattened array."
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "uniq",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.uniq",
    "access": null,
    "description": "Removes duplicate entries inside an array.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} The input array with all duplicate values removed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "The array to unicize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "The input array with all duplicate values removed."
    },
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "unique",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.unique",
    "access": null,
    "description": "Removes duplicate entries inside an array.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} The input array with all duplicate values removed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "The array to unicize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "The input array with all duplicate values removed."
    },
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "isEmptyString",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.isEmptyString",
    "access": null,
    "description": "Checks whether a string is empty.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true` if `target` is a non-string or if it is empty, `false` otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The string to verify."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if `target` is a non-string or if it is empty, `false` otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "tokenize",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.tokenize",
    "access": null,
    "description": "Tokenizes a list of string using a separator.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} The list of tokens."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "The list of strings to tokenize."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Regex"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "/\\s*,\\s*\\/",
        "defaultRaw": "/\\s*,\\s*\\/",
        "name": "pattern",
        "description": "The pattern to use as separator."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "The list of tokens."
    },
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "encodeBase64",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.encodeBase64",
    "access": null,
    "description": "Encodes a string to Base 64 encoding.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The enccoded data."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to encode."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The enccoded data."
    },
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "decodeBase64",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.decodeBase64",
    "access": null,
    "description": "Decodes a string from Base 64 encoding.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|Buffer} The decoded data."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to decode."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "asString",
        "description": "If `true`, a UTF-8 string will be returned, otherwise a Node.js Buffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "Buffer"
      ],
      "spread": false,
      "description": "The decoded data."
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "md5",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.md5",
    "access": null,
    "description": "Computes the MD5 hash of a string.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The MD5 hash of the input string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The string to compute the hash of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The MD5 hash of the input string."
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parseBoolean",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.parseBoolean",
    "access": null,
    "description": "Parses a object as a boolean.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} The boolean value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to parse."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "The boolean value."
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parseDate",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.parseDate",
    "access": null,
    "description": "Parses a date.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} The parsed date."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "The string or number to parse. Numbers are interpreted as `X days ago`, positive and negative values have the same meaning."
      },
      {
        "nullable": null,
        "types": [
          "moment",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "fallback",
        "description": "The fallback value to return when parsing fails."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "The parsed date."
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parseDateTime",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.parseDateTime",
    "access": null,
    "description": "Parses a timestamp.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} The parsed timestamp."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": "The string to parse."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"YYYY-MM-DDTHH:mm:ssZ\",",
        "defaultRaw": "[\"YYYY-MM-DDTHH:mm:ssZ\",",
        "name": "formats",
        "description": "\"YYYY-MM-DDTHH:mm:ss.SSSZZ\"]] A list of format to use for parsing."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "utc",
        "description": "Whether to return the timestamp in UTC timezone."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "fallback",
        "description": "The fallback value to return when parsing fails."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "The parsed timestamp."
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "serializeDate",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.serializeDate",
    "access": null,
    "description": "Serializes a timestamp as a string.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The serialized timestamp."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "date",
        "description": "The timestamp to serialize."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"YYYY-MM-DDTHH:mm:ssZ\"",
        "defaultRaw": "YYYY-MM-DDTHH:mm:ssZ",
        "name": "format",
        "description": "The format to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The serialized timestamp."
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "elapsedTime",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.elapsedTime",
    "access": null,
    "description": "Returns the elapsed time (in milliseconds) since a reference time.",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number|string} If `round` is true, a string with the elapsed time, otherwise a full precision number."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The starting reference time, as returned by `process.hrtime()`."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "round",
        "description": "Whether or not round the results."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Constants.Utils.OUTPUT_PRECISION",
        "defaultRaw": "Constants.Utils.OUTPUT_PRECISION",
        "name": "precision",
        "description": "The precision to run in case of rounding."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "string"
      ],
      "spread": false,
      "description": "If `round` is true, a string with the elapsed time, otherwise a full precision number."
    },
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "random",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.random",
    "access": null,
    "description": "Returns a random value.",
    "lineNumber": 234,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random number between `min` and `max` (inclusive)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "The minimum acceptable value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "The maximum acceptable value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random number between `min` and `max` (inclusive)."
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "range",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.range",
    "access": null,
    "description": "Returns a sequence of numbers.",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number[]} A sequence of numbers starting with `start` and ending with `end`."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The starting number."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The ending number."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "inclusive",
        "description": "Whether or not `end` is included in the returned array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": "A sequence of numbers starting with `start` and ending with `end`."
    },
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "delay",
    "memberof": "lib/utils.js~Utils",
    "longname": "lib/utils.js~Utils.delay",
    "access": null,
    "description": "Creates a async function which resolves after the specified amount.",
    "lineNumber": 271,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "The amount of time to wait before returning, in milliseconds."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]